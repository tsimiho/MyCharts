# Each service has:
#  1. its own section specifying the build context
#  2. Dockerfile
#  3. ports
#  4. dependencies
#  5. environment variables
#  6. and restart policy.

# The environment variables include:
#  1. the database connection details
#  2. secret values
#  3. schema name
#  4. and base URL

# The ports define the mapping between the host and container ports for each service.

# [IMPORTANT] Make sure to adjust the values of the environment variables, such as:
# 1. DB_HOST
# 2. DB_PORT
# 3. DB_USER
# 4. DB_PASS
# 5. SECRET_JWT
# 6. SECRET_STRING_SERVICES
# etc, according to your specific configuration.

# The deliverable you should push to your GitHub repository MUST:
#  1. Have the IP (that you give to every DB, Microservice, FrontEnd) equal to [IP]
#  2. The frontend should run through port 4007

version: "3"
services:
    zookeeper:
        image: confluentinc/cp-zookeeper
        container_name: zookeeper
        ports:
            - "2181:2181"
        environment:
            - ZOOKEEPER_CLIENT_PORT=2181

    kafka:
        image: confluentinc/cp-kafka
        container_name: kafka
        depends_on:
            - zookeeper
        ports:
            - "19092:19092"
        environment:
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
            - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,CONNECTIONS_FROM_HOST://localhost:19092
            # Change 172.19.0.3:9092 to kafka:9092
            # Tested actual IP where kafka runs above but does not work.
            # Ideally it should work with kafka:9092 (dns issues tho ??)

            # Works for client - docker services
            # TODO: Migrate services to docker, change brokers to only docker ips
            - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
            - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
            - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "echo 'ReplicaVerification' | kafka-console-consumer --bootstrap-server kafka:9092 --topic __consumer_offsets --from-beginning --max-messages 1 --timeout-ms 2000 >/dev/null 2>&1",
                ]
            interval: 30s
            timeout: 10s
            retries: 5

    orchestrator_service:
        build:
            context: ./Orchestrator
            dockerfile: dockerfile
        ports:
            - "9001:9001"
            - "8090:8090"
        environment:
            - MONGO_URI=mongodb+srv://user:user@cluster0.pt64z19.mongodb.net/
            - BASE_URL=192.168.1.227
        restart: always
        depends_on:
            kafka:
                condition: service_healthy

    users_service:
        build:
            context: ./Users
            dockerfile: dockerfile
        ports:
            - "9000:9000"
        environment:
            - MONGO_URI=mongodb+srv://user:user@cluster0.pt64z19.mongodb.net/
            - BASE_URL=192.168.1.227
        restart: always
        depends_on:
            kafka:
                condition: service_healthy

    frontend_service:
        build:
            context: ./frontend/saas23-frontend
            dockerfile: dockerfile
        ports:
            - "4007:4007"
        environment:
            - BASE_URL=192.168.1.227
        restart: always

    linechart_create_service:
        build:
            context: ./Linechart-Create
            dockerfile: dockerfile
        ports:
            - "9002:9002"
        environment:
            - MONGO_URI=mongodb+srv://user:user@cluster0.moa9dz2.mongodb.net/
            - BASE_URL=192.168.1.227
        restart: always
        depends_on:
            kafka:
                condition: service_healthy

    linechart_show_service:
        build:
            context: ./Linechart-Show
            dockerfile: dockerfile
        ports:
            - "9003:9003"
        environment:
            - MONGO_URI=mongodb+srv://user:user@cluster0.moa9dz2.mongodb.net/
            - BASE_URL=192.168.1.227
        restart: always
        depends_on:
            kafka:
                condition: service_healthy

    linewithannotations_create_service:
        build:
            context: ./LineWithAnnotations-Create
            dockerfile: dockerfile
        ports:
            - "9004:9004"
        environment:
            - MONGO_URI=mongodb+srv://user:user@cluster0.r25s0uy.mongodb.net/
            - BASE_URL=192.168.1.227
        restart: always
        depends_on:
            kafka:
                condition: service_healthy

    linewithannotations_show_service:
        build:
            context: ./LineWithAnnotations-Show
            dockerfile: dockerfile
        ports:
            - "9005:9005"
        environment:
            - MONGO_URI=mongodb+srv://user:user@cluster0.r25s0uy.mongodb.net/
            - BASE_URL=192.168.1.227
        restart: always
        depends_on:
            kafka:
                condition: service_healthy

    dependencywheel_create_service:
        build:
            context: ./DependencyWheel-Create
            dockerfile: dockerfile
        ports:
            - "9006:9006"
        environment:
            - MONGO_URI=mongodb+srv://user:user@cluster0.ouceens.mongodb.net/
            - BASE_URL=192.168.1.227
        restart: always
        depends_on:
            kafka:
                condition: service_healthy

    dependencywheel_show_service:
        build:
            context: ./DependencyWheel-Show
            dockerfile: dockerfile
        ports:
            - "9007:9007"
        environment:
            - MONGO_URI=mongodb+srv://user:user@cluster0.ouceens.mongodb.net/
            - BASE_URL=192.168.1.227
        restart: always
        depends_on:
            kafka:
                condition: service_healthy

    basiccolumn_create_service:
        build:
            context: ./BasicColumn-Create
            dockerfile: dockerfile
        ports:
            - "9008:9008"
        environment:
            - MONGO_URI=mongodb+srv://user:user@cluster0.y2sphyl.mongodb.net/
            - BASE_URL=192.168.1.227
        restart: always
        depends_on:
            kafka:
                condition: service_healthy

    basiccolumn_show_service:
        build:
            context: ./BasicColumn-Show
            dockerfile: dockerfile
        ports:
            - "9009:9009"
        environment:
            - MONGO_URI=mongodb+srv://user:user@cluster0.y2sphyl.mongodb.net/
            - BASE_URL=192.168.1.227
        restart: always
        depends_on:
            kafka:
                condition: service_healthy

    networkgraph_create_service:
        build:
            context: ./NetworkGraph-Create
            dockerfile: dockerfile
        ports:
            - "9010:9010"
        environment:
            - MONGO_URI=mongodb+srv://user:user@cluster0.svdqmsb.mongodb.net/
            - BASE_URL=192.168.1.227
        restart: always
        depends_on:
            kafka:
                condition: service_healthy

    networkgraph_show_service:
        build:
            context: ./NetworkGraph-Show
            dockerfile: dockerfile
        ports:
            - "9011:9011"
        environment:
            - MONGO_URI=mongodb+srv://user:user@cluster0.svdqmsb.mongodb.net/
            - BASE_URL=192.168.1.227
        restart: always
        depends_on:
            kafka:
                condition: service_healthy

    polarchart_create_service:
        build:
            context: ./Polarchart-Create
            dockerfile: dockerfile
        ports:
            - "9012:9012"
        environment:
            - MONGO_URI=mongodb+srv://user:user@cluster0.zhha7md.mongodb.net/
            - BASE_URL=192.168.1.227
        restart: always
        depends_on:
            kafka:
                condition: service_healthy

    polarchart_show_service:
        build:
            context: ./Polarchart-Show
            dockerfile: dockerfile
        ports:
            - "9013:9013"
        environment:
            - MONGO_URI=mongodb+srv://user:user@cluster0.zhha7md.mongodb.net/
            - BASE_URL=192.168.1.227
        restart: always
        depends_on:
            kafka:
                condition: service_healthy

    csv_downloader_service:
        build:
            context: ./CSV-Downloader
            dockerfile: dockerfile
        ports:
            - "9014:9014"
        environment:
            - BASE_URL=192.168.1.227
        restart: always
        